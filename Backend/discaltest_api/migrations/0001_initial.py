# Generated by Django 3.2.5 on 2021-07-11 15:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('loggin', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Alumnos',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Entidad',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('tip_entidad', models.CharField(choices=[('Ad', 'Administrador'), ('Al', 'Alumno'), ('Pr', 'Profesor')], max_length=2)),
                ('nombre', models.CharField(max_length=60)),
                ('apellido', models.CharField(max_length=60)),
                ('telefono', models.CharField(max_length=20)),
                ('direccion', models.CharField(max_length=20)),
                ('id_usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profesor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('curso', models.IntegerField(max_length=2)),
                ('id_entidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='discaltest_api.entidad')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('descripcion', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='ProfesorQuestion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('id_profesor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='discaltest_api.profesor')),
                ('id_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='discaltest_api.question')),
            ],
        ),
        migrations.CreateModel(
            name='AluQuestion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('id_alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='discaltest_api.alumnos')),
                ('id_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='discaltest_api.question')),
            ],
        ),
        migrations.CreateModel(
            name='AluProfe',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('id_alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='discaltest_api.alumnos')),
                ('id_profedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='discaltest_api.profesor')),
            ],
        ),
        migrations.AddField(
            model_name='alumnos',
            name='id_entidad',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='discaltest_api.entidad'),
        ),
    ]
